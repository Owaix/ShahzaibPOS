using Lib.Utilities;
using System;
using System.Data;
using System.Data.SqlClient;

namespace Lib.Reporting
{
    class ReportsController
    {

        private const String Report_TestReports = "Report_TestReports";

        private const String Report_TestReportByDepartment = "Report_TestReportByDepartment";

        private String Report_BookingSummary = "";

        private const String Report_BookingSummary_Summary = "Report_BookingSummary_Summary";

        private const String Report_MonthlySummary = "Report_MonthlySummary";

        private const String Report_MonthlySummary_Summary = "Report_MonthlySummary_Summary";

        private const String BookingSummary_ReportCount = "BookingSummary_ReportCount";

        private const String Report_FreePatients = "Report_FreePatients";

        private const String Report_Receipt = "Report_Receipt";

        private const String Report_TestReport_Count = "Report_TestReport_Count";

        private const String Report_DiscountPatients = "Report_DiscountPatients";

        private const String TestWiseDetailSummary = "TestWiseDetailSummary ";

        private const String TestWiseDetailSummary_Count = "TestWiseDetailSummary_Count ";

        private const String TestWiseShortSummary = "TestWiseShortSummary ";

        private const String BookingSummary_UserTotalAmount = "BookingSummary_UserTotalAmount ";

        private const String Select_PatientReportRecord = "Select_PatientReportRecord ";

        private const String PatientReportDetails_Delete = "PatientReportDetails_Delete";

        private const String SelectAllTestResult = "SelectAllTestResult";

        private const String TestRateList = "TestRateList";

        private const String Select_WidalReport = "Select_WidalReport";

        private const String Select_PatientDetails = "Select_PatientDetails";

        private const String Select_BookedTestByname = "Select_BookedTestByname";

        private const String Report_SpecialChemistry = "Report_SpecialChemistry";

        private const String SelectAllDepartmentTest = "SelectAllDepartmentTest";

        private const String GetPatientInformation = "GetPatientInformation";

        private const String Report_TestWisePendingReport = "Report_TestWisePendingReport";
        private const String Report_CategoryandLabWiseTest = "Report_CategoryandLabWiseTest";


        public static DataTable TestReports(String labNo, Int32 reportID)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_TestReports, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@labNo", labNo);
            sqlCmd.Parameters.AddWithValue("@reportID", reportID);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_TestReports";
            return dt;
        }

        public static DataTable PatientDetails_Select(String labNo)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Select_PatientDetails, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@labNo", labNo);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Select_PatientDetails";
            return dt;
        }

        public static DataTable TestReport_Depart(String labNo, Int32 labDeptID)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_TestReportByDepartment, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@labNo", labNo);
            sqlCmd.Parameters.AddWithValue("@labDeptID", labDeptID);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_TestReportByDepartment";
            return dt;
        }

        public static DataTable SpecialChemistry_Report(String labNo, Int32 labDeptID)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_SpecialChemistry, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@labNo", labNo);
            sqlCmd.Parameters.AddWithValue("@labDeptID", labDeptID);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_SpecialChemistry";
            return dt;
        }


        public static DataTable WidalReport_Select(String labNo, Int32 labDeptID)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Select_WidalReport, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@labNo", labNo);
            sqlCmd.Parameters.AddWithValue("@labDeptID", labDeptID);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Select_WidalReport";
            return dt;
        }


        public static DataTable BookingSummary(DateTime dtStart, DateTime dtEnd, String userName, String type)
        {
            string query = @"SELECT 
	                         OrderNo , Amount , OrderDate , OrderType  , KOTID , us.UserName , GST , Discount	
                             FROM tbl_Order PR
	                         INNER JOIN AspNetUsers us ON us.Id = PR.UserID
                             WHERE
                             ('All' = @userName OR us.[UserName] LIKE @userName)
                             AND ('0' = @type OR PR.[KOTID] LIKE @type)
                             AND PR.OrderDate BETWEEN @reportStartDate AND @reportEndDate";
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(query, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.Text;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            sqlCmd.Parameters.AddWithValue("@userName", userName);
            sqlCmd.Parameters.AddWithValue("@type", type);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            return dt;
        }
        public static DataTable CategoryandLabWiseTest(DateTime dtStart, DateTime dtEnd, String userName)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_CategoryandLabWiseTest, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            sqlCmd.Parameters.AddWithValue("@userName", userName);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_CategoryandLabWiseTest";
            return dt;
        }

        public static DataTable ItemsSummary(DateTime dtStart, DateTime dtEnd, String Item)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand("Item_Summary", SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            sqlCmd.Parameters.AddWithValue("@Item", Item);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Item_Summary";
            return dt;
        }

        public static DataTable BookingDetailSummary(DateTime dtStart, DateTime dtEnd, String userName, String type)
        {
            string _query = @"SELECT  OrderNo , Amount , OrderDate , OrderType  , PR.KOTID , us.UserName , GST , Discount
	                         ,Items.IName , Qty as Qty , Rate as Rate  
                              FROM 
                              	tbl_Order PR
                              	INNER JOIN AspNetUsers us ON us.Id = PR.UserID
                              	left join tbl_KOT on tbl_KOT.Id = PR.KOTID
                              	left join tbl_OrderDetails on tbl_OrderDetails.OrderId = PR.OrderId
                              	left join Items on Items.IID = tbl_OrderDetails.itemID
                              WHERE
                                  ('All' = @userName OR us.[UserName] LIKE @userName)
                              	AND ('0' = @type OR PR.[KOTID] LIKE @type)
                              	AND PR.OrderDate BETWEEN @reportStartDate AND @reportEndDate";
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(_query, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.Text;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            sqlCmd.Parameters.AddWithValue("@userName", userName);
            sqlCmd.Parameters.AddWithValue("@type", type);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            // dt.TableName = "Report_BookingDetailSummary";
            return dt;
        }

        public static DataTable MonthlySummary(DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_MonthlySummary, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_MonthlySummary";
            return dt;
        }

        public static DataTable MonthlySummary_Summary(DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_MonthlySummary_Summary, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_MonthlySummary_Summary";
            return dt;
        }

        public static DataTable BookingSummary_Report(DateTime dtStart, DateTime dtEnd, String userName)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(BookingSummary_ReportCount, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            sqlCmd.Parameters.AddWithValue("@userName", userName);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "BookingSummary_ReportCount";
            return dt;
        }

        public static DataTable BookingSummary_UserAmount(DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(BookingSummary_UserTotalAmount, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "BookingSummary_UserTotalAmount";
            return dt;
        }



        public static DataTable FreePatient(DateTime dtStart, DateTime dtEnd, Int32 docID)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_FreePatients, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@dtStart", dtStart);
            sqlCmd.Parameters.AddWithValue("@dtEnd", dtEnd);
            sqlCmd.Parameters.AddWithValue("@docID", docID);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_FreePatients";
            return dt;
        }

        public static DataTable Receipt(String labNo)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_Receipt, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@labNo", labNo);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_Receipt";
            return dt;
        }

        public static DataTable TestReportCount(DateTime dtStart, DateTime dtEnd, Int32 reportID, String userName)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_TestReport_Count, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@dtStart", dtStart);
            sqlCmd.Parameters.AddWithValue("@dtEnd", dtEnd);
            sqlCmd.Parameters.AddWithValue("@reportID", reportID);
            sqlCmd.Parameters.AddWithValue("@userName", userName);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_TestReport_Count";
            return dt;
        }

        public static DataTable DiscountPatients(DateTime dtStart, DateTime dtEnd, Int32 docID)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_DiscountPatients, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@dtStart", dtStart);
            sqlCmd.Parameters.AddWithValue("@dtEnd", dtEnd);
            sqlCmd.Parameters.AddWithValue("@docID", docID);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_DiscountPatients";
            return dt;
        }

        public static DataTable TestWiseDetailSumm_Count(DateTime dtStart, DateTime dtEnd, String userName)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(TestWiseDetailSummary_Count, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            sqlCmd.Parameters.AddWithValue("@userName", userName);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "TestWiseDetailSummary_Count ";
            return dt;
        }
        public static DataTable TestWiseDetailSumm(DateTime dtStart, DateTime dtEnd, String userName)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(TestWiseDetailSummary, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            sqlCmd.Parameters.AddWithValue("@userName", userName);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "TestWiseDetailSummary ";
            return dt;
        }



        public static DataTable TestWiseShortSumm(DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(TestWiseShortSummary, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportStartDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@reportEndDate", dtEnd);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "TestWiseShortSummary ";
            return dt;
        }

        public static DataTable SelectAllTest_Result(Int32 reportID, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(SelectAllTestResult, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportID", reportID);
            sqlCmd.Parameters.AddWithValue("@startDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@endDate", dtEnd);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "SelectAllTestResult";
            return dt;
        }

        public static DataTable BookedTestByname(Int32 reportID, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Select_BookedTestByname, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportID", reportID);
            sqlCmd.Parameters.AddWithValue("@startDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@endDate", dtEnd);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Select_BookedTestByname";
            return dt;
        }

        public static DataTable TestRate_List()
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(TestRateList, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "TestRateList";
            return dt;
        }

        public static DataTable SelectAll_DepartmentTest(Int32 labdeptID, DateTime startDate, DateTime endDate)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(SelectAllDepartmentTest, SqlHelper.DefaultSqlConnection);
            sqlCmd.Parameters.AddWithValue("@labdeptID", labdeptID);
            sqlCmd.Parameters.AddWithValue("@startDate", startDate);
            sqlCmd.Parameters.AddWithValue("@endDate", endDate);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "SelectAllDepartmentTest";
            return dt;
        }

        public static DataTable Get_PatientInformation(String labNo)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(GetPatientInformation, SqlHelper.DefaultSqlConnection);
            sqlCmd.Parameters.AddWithValue("@labNo", labNo);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "GetPatientInformation";
            return dt;
        }

        public static DataTable ReportTestWisePendingReport(Int32 reportID, DateTime dtStart, DateTime dtEnd)
        {
            DataTable dt = new DataTable();
            SqlCommand sqlCmd = new SqlCommand(Report_TestWisePendingReport, SqlHelper.DefaultSqlConnection);
            sqlCmd.CommandTimeout = 0;
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@reportID", reportID);
            sqlCmd.Parameters.AddWithValue("@startDate", dtStart);
            sqlCmd.Parameters.AddWithValue("@endDate", dtEnd);
            SqlDataAdapter adp = new SqlDataAdapter(sqlCmd);
            adp.Fill(dt);
            adp.Dispose();
            sqlCmd.Dispose();
            dt.TableName = "Report_TestWisePendingReport";
            return dt;
        }
    }
}
